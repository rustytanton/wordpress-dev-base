version: '3.3'

services:
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: wpdev
    volumes:
      - ./provision/mysql/data:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
  wordpress:
    depends_on:
      - mysql
    build:
      context: ./provision/wordpress
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8081:80
    environment:
      WORDPRESS_DB_PASSWORD: wpdev
    volumes:
      - webroot:/var/www/html
      - ./src/plugins/example:/var/www/html/wp-content/plugins/example
      - ./src/themes/example:/var/www/html/wp-content/themes/example
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
    ports:
      - 8082:80
  wp-cli:
    depends_on: 
      - mysql
      - wordpress
    image: wordpress:cli
    user: xfs # this user maps to www-data in the wordpress image
    volumes:
      - webroot:/var/www/html
      - ./src/plugins/example:/var/www/html/wp-content/plugins/example
      - ./src/themes/example:/var/www/html/wp-content/themes/example
  wordpress-phpunit:
    depends_on:
      - mysql-phpunit
    # image: "chriszarate/wordpress-phpunit:6.0.6"
    build:
      context: ./provision/wordpress-phpunit
      dockerfile: Dockerfile
    environment:
      PHPUNIT_DB_HOST: "mysql-phpunit"
    volumes:
      - "./src:/app"
      - "testsuite:/tmp"
  mysql-phpunit:
    image: "mysql:5.7"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "wordpress_test"
      MYSQL_ROOT_PASSWORD: ""
  composer:
    image: composer
    volumes:
      - "./src:/app"
    working_dir: /app
volumes:
  mysql-data: {}
  testsuite: {}
  webroot: {}